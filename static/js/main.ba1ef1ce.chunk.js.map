{"version":3,"sources":["Header.js","Ikony.js","Home.js","recept.js","otvorenyRecept.js","recepty.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Heading","useState","menu","showMenu","menuShow","className","to","onClick","style","color","Ikony","href","home","props","recept","value","hodnota","kliknutie","key","id","src","img","alt","titul","otvorenyRecept","BG","background","obrazok","backgroundSize","target","link","render","Recepty","najdeny","Hladane","recepty","novyRecept","query","setQuery","noveID","aside","showAside","showRecepies","useEffect","getRecepies","a","axios","data","recipes","console","log","clickEvent","e","preventDefault","regEx","onSubmit","type","placeholder","onChange","map","uuid","recipe_id","image_url","title","length","split","splice","join","Number","source_url","contact","action","htmlFor","name","cols","rows","App","exact","path","component","Contact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba1ef1ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Heading() {\r\n\r\n    const [menu, showMenu] = useState(false);\r\n\r\n    const menuShow = () => {\r\n        let show = !menu;\r\n        showMenu(show);\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <nav>\r\n                        <Link className=\"LOGO\" to=\"/Odmamicky\">Od mamičky</Link>\r\n                    <ul className=\"navbar\">\r\n                        <li>\r\n                            <Link className=\"link\" to=\"/Odmamicky\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"link\" to=\"/Recepty\">Recepty</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"link\" to=\"/Kontakt\">Kontakt</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <button onClick={menuShow} className=\"mobile-menu-btn\">{menu === false ? <i className=\"fas fa-hamburger\"></i> :<i style={{color: \"#ff7e5f\"}} className=\"fas fa-hamburger\"></i>}</button>\r\n                </nav>\r\n             {menu === false ? null :   \r\n                <div className=\"mobile\">\r\n                    <Link className=\"link-mobile\" onClick={menuShow} to=\"/Odmamicky\">Home</Link>\r\n                    <Link className=\"link-mobile\" onClick={menuShow} to=\"/Recepty\">Recepty</Link>\r\n                    <Link className=\"link-mobile\" onClick={menuShow} to=\"/Kontakt\">Kontakt</Link>\r\n                </div>}\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Ikony() {\r\n\r\n\r\n    return (\r\n        <div className=\"ikonBox\">\r\n            <a className=\"ikon\" href=\"https://www.facebook.com/\"><i className=\"fab fa-facebook-square\"></i></a>\r\n            <a className=\"ikon\" href=\"https://www.youtube.com/\"><i className=\"fab fa-youtube\"></i></a>\r\n            <a className=\"ikon\" href=\"https://www.instagram.com/\"><i className=\"fab fa-instagram-square\"></i></a>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './home.css'\r\nimport Ikony from './Ikony.js'\r\nimport {\r\n    BrowserRouter as Router, Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nexport default function home(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"home\">\r\n\r\n                <div className=\"overlay\">\r\n                    <h1 className=\"home-text\">Recepty ako od mamičky.</h1>\r\n                    <Ikony />\r\n                    <Link to=\"/Recepty\" className=\"btn-More\"><span></span><span></span>Šup na recepty</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function recept(props) {\r\n    return (\r\n        <>\r\n            <li value={props.hodnota} onClick={props.kliknutie} key={props.id}><img className=\"rec-img\" src={props.img} alt=\"\"/> {props.titul}</li>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './recepty.css'\r\n\r\nexport default function otvorenyRecept(props) {\r\n\r\n    const BG = {\r\n        background: `url(${props.obrazok}) center no-repeat`,\r\n        backgroundSize: \"cover\"\r\n    }\r\n\r\n    const render = () => {\r\n    if(props.titul === null){\r\n\r\n    }\r\n    else{\r\n        return(\r\n        <div className=\"receptBox\" style={BG}>\r\n            <div className=\"bottom\"></div>\r\n            <h1>{props.titul}</h1>\r\n                <a target=\"_blank\" href={props.link}><img className=\"img\" src={props.obrazok} alt=\"\"/></a>\r\n        </div>)\r\n    }\r\n}\r\n    return (\r\n        <div>\r\n        {render()}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './recepty.css'\r\nimport axios from 'axios'\r\nimport uuid from 'react-uuid'\r\nimport Recept from './recept.js'\r\nimport { render } from '@testing-library/react'\r\nimport OtvorenyRecept from './otvorenyRecept.js'\r\n\r\nexport default function Recepty() {\r\n\r\nconst [ najdeny, Hladane ] = useState(\"\");\r\nconst [ recepty, novyRecept ] = useState([]);\r\nconst [ query, setQuery ] = useState(\"\");\r\nconst [ id, noveID ] = useState(0);\r\nconst [ aside, showAside ] = useState(false);\r\n\r\n\r\nconst showRecepies = () => {\r\n    let show = !aside;\r\n    showAside(show);\r\n}\r\n\r\n\r\nconst novy = (e) => {\r\n    Hladane(e.target.value)\r\n}\r\nuseEffect( ()=> {\r\n    getRecepies();\r\n},[query]);\r\n\r\nconst getRecepies = async () => {\r\n    try{\r\n        if(query === \"\"){\r\n\r\n        }\r\n        else{\r\n        const data = await axios(`https://forkify-api.herokuapp.com/api/search?q=${query}`);\r\n        novyRecept(data.data.recipes);\r\n    }\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst clickEvent = (e) =>{\r\n    e.preventDefault();\r\n    noveID(e.target.value);\r\n    showRecepies();\r\n}\r\n\r\nconst renderData = () => {\r\n    recepty.forEach( recept => {\r\n        if(recept.recipe_id == id){\r\n            return {\r\n                receptTitul: recept.title,\r\n                receptImg: recept.image_url\r\n            }\r\n        }\r\n        else{\r\n            \r\n        }\r\n    })\r\n}\r\n\r\nconst onSubmit = (e)=>{\r\n    showRecepies();\r\n    e.preventDefault();\r\n    setQuery(najdeny);\r\n    Hladane(\"\");\r\n}\r\nconst regEx = /[\\s-]/;\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"wrapper\">\r\n                <h1 className=\"nadpis-strany\">Recepty</h1>\r\n                <main>\r\n                    <div className=\"hladaj\"><form onSubmit={onSubmit}><input type=\"text\" placeholder=\"Čo hľadáš...?\" value={najdeny} onChange={novy} /><button type=\"submit\">Hľadaj</button></form></div>\r\n                    <div className=\"nadpis\"><h3>Zoznam receptov</h3></div>\r\n                    \r\n                     <aside className={aside ? \"show\" : \"hidden\"}>\r\n                    <ul>\r\n                        { recepty.map( recept => (\r\n                            <Recept key={uuid()} kliknutie={clickEvent} hodnota={recept.recipe_id} img={recept.image_url} titul={recept.title.length > 18 ? `${recept.title.split(regEx).splice(0,2).join(\" \")}...`  : recept.title}/>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"close-aside\" onClick={showRecepies}><i className=\"fas fa-times\"></i></button>\r\n                </aside>\r\n\r\n                <div className=\"zobraz\">\r\n                 {recepty.length === 0 ? <h1 className=\"empty\">Zadaj názov potraviny v angličtine</h1> : recepty.map(recept => ( <OtvorenyRecept key={uuid()} titul={Number(recept.recipe_id) === Number(id) ? recept.title : null} obrazok={recept.recipe_id == id ? recept.image_url : null} link={recept.recipe_id == id ? recept.source_url : null}/>))}\r\n                </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './contact.css'\r\n\r\nexport default function contact() {\r\n    return (\r\n        <div className=\"contact\">\r\n            <form className=\"contact-form\" action=\"\">\r\n                <label htmlFor=\"\">Predmet</label>\r\n                <input type=\"text\" placeholder=\"Predmet správy...\"/>\r\n                <label htmlFor=\"\">Správa</label>\r\n                <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" placeholder=\"Správa...\"></textarea>\r\n                <button type=\"submit\">Odoslať</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Header.js'\nimport Home from './Home.js'\nimport Recepty from './recepty.js'\nimport Contact from './Contact.js'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\n\n\nfunction App() {\n  return (\n<div className=\"App\">\n<Router>\n    <Header />\n      <Switch>\n        <Route exact path=\"/Odmamicky\">\n          <Home/>\n        </Route>\n        <Route path=\"/Recepty\" component={Recepty} />\n        <Route path=\"/Kontakt\" component={Contact} />\n      </Switch>\n</Router>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}